[gd_scene load_steps=7 format=2]

[ext_resource path="res://Player101.png" type="Texture" id=1]
[ext_resource path="res://move.wav" type="AudioStream" id=2]
[ext_resource path="res://explosion.wav" type="AudioStream" id=3]

[sub_resource type="GDScript" id=2]
script/source = "extends Area2D

const EXPLOSION = preload(\"res://Scenes/Effects/WallCollision.tscn\")

#https://kidscancode.org/godot_recipes/2d/grid_movement/
onready var ray = $CollisionDetection
onready var wallDetection = $WallDetection
onready var tween = $Tween
onready var MoveSound = $MoveSound
onready var ExplosionSound = $ExplosionSound
onready var collision = $Area2D

export var speed = 5

var direction = Vector2(0,0)
var Box_dir = Vector2(0,0)
var boxInFront = false
var box = null
var tile_size = 16
var inputs = {\"right\": Vector2.RIGHT,
			\"left\": Vector2.LEFT,
			\"up\": Vector2.UP,
			\"down\": Vector2.DOWN}

func _ready():
	position = position.snapped(Vector2.ONE * tile_size)
	position += Vector2.ONE * tile_size/2

func _process(delta):
	if box != null:
		Box_dir = Vector2(box.position.x - self.position.x, box.position.y - self.position.y)
		Box_dir = Box_dir.normalized()
		if Box_dir == direction:
			boxInFront = true
		else:
			boxInFront = false
	print(boxInFront)
	for dir in inputs.keys():
		if Input.is_action_just_pressed(dir):
			check_move(inputs.get(dir))
			
func _unhandled_input(event):
	if tween.is_active():
		tween.seek(1)
	

func check_move(dir):
	direction = dir
	check_crash()
	
	$Area2D/CollisionShape2D2.rotation_degrees = rad2deg(dir.angle()) - 90
	ray.cast_to = dir * tile_size
	ray.force_raycast_update()
	
	check_box()
	if box != null:
		print(\"Box\")
		if !wallDetection.is_colliding():
			move_Box(dir)
	
	if !ray.is_colliding() or boxInFront && !wallDetection.is_colliding():
		#position += dir * tile_size
		move_tween(dir)

func move_tween(dir):
	tween.interpolate_property(self, \"position\",
		position, position + dir * tile_size,
		#Change Tween.Trans_X for different movement style
		1.0/speed, Tween.TRANS_BACK, Tween.EASE_IN_OUT)
	tween.start()
	MoveSound.play()
	
func move_Box(dir):
	MoveSound.play()
	if boxInFront:
		tween.interpolate_property(box, \"position\",
			box.position, box.position + dir * tile_size,
			#Change Tween.Trans_X for different movement style
			1.0/speed, Tween.TRANS_BACK, Tween.EASE_IN_OUT)
			
		tween.start()

func check_crash():
	wallDetection.cast_to = direction * (tile_size * 2)
	wallDetection.force_raycast_update()
	if wallDetection.is_colliding() && !ray.is_colliding() && !boxInFront:
		MoveSound.play()
		var x = EXPLOSION.instance()
		get_parent().add_child(x)
		x.position = global_position + direction * tile_size * 1.5
		x.look_at(global_position)
		x.boom()
		ExplosionSound.play()


func check_box():
	if box != null:
		Box_dir = Vector2(box.position.x - self.position.x, box.position.y - self.position.y)
		Box_dir = Box_dir.normalized()
		if Box_dir == direction:
			boxInFront = true
		else:
			boxInFront = false

func _on_Area2D_area_entered(area):
	if area.is_in_group(\"Box\"):
		box = area

func _on_Area2D_area_exited(area):
	if area.is_in_group(\"Box\"):
		pass
		#box = null

func _on_Player_area_entered(area):
	if area.is_in_group(\"Box\"):
		box = area
"

[sub_resource type="CircleShape2D" id=3]
radius = 8.0

[sub_resource type="RayShape2D" id=4]
length = 15.0

[node name="Player" type="Area2D"]
script = SubResource( 2 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( 4.76837e-07, 4.76837e-07 )
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 3 )

[node name="CollisionDetection" type="RayCast2D" parent="."]
collide_with_areas = true

[node name="WallDetection" type="RayCast2D" parent="."]

[node name="Tween" type="Tween" parent="."]

[node name="MoveSound" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )
volume_db = -10.487

[node name="ExplosionSound" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 3 )
volume_db = -16.605

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D2" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 4 )

[connection signal="area_entered" from="." to="." method="_on_Player_area_entered"]
[connection signal="area_entered" from="Area2D" to="." method="_on_Area2D_area_entered"]
[connection signal="area_exited" from="Area2D" to="." method="_on_Area2D_area_exited"]
